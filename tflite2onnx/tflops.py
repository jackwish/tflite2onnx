# This file is generated by $tflite2onnx/scripts/gen.py

from tflite2onnx.op.common import OpFactory


OP_NAMES = [
    'ADD',
    'AVERAGE_POOL_2D',
    'CONCATENATION',
    'CONV_2D',
    'DEPTHWISE_CONV_2D',
    'DEPTH_TO_SPACE',
    'DEQUANTIZE',
    'EMBEDDING_LOOKUP',
    'FLOOR',
    'FULLY_CONNECTED',
    'HASHTABLE_LOOKUP',
    'L2_NORMALIZATION',
    'L2_POOL_2D',
    'LOCAL_RESPONSE_NORMALIZATION',
    'LOGISTIC',
    'LSH_PROJECTION',
    'LSTM',
    'MAX_POOL_2D',
    'MUL',
    'RELU',
    'RELU_N1_TO_1',
    'RELU6',
    'RESHAPE',
    'RESIZE_BILINEAR',
    'RNN',
    'SOFTMAX',
    'SPACE_TO_DEPTH',
    'SVDF',
    'TANH',
    'CONCAT_EMBEDDINGS',
    'SKIP_GRAM',
    'CALL',
    'CUSTOM',
    'EMBEDDING_LOOKUP_SPARSE',
    'PAD',
    'UNIDIRECTIONAL_SEQUENCE_RNN',
    'GATHER',
    'BATCH_TO_SPACE_ND',
    'SPACE_TO_BATCH_ND',
    'TRANSPOSE',
    'MEAN',
    'SUB',
    'DIV',
    'SQUEEZE',
    'UNIDIRECTIONAL_SEQUENCE_LSTM',
    'STRIDED_SLICE',
    'BIDIRECTIONAL_SEQUENCE_RNN',
    'EXP',
    'TOPK_V2',
    'SPLIT',
    'LOG_SOFTMAX',
    'DELEGATE',
    'BIDIRECTIONAL_SEQUENCE_LSTM',
    'CAST',
    'PRELU',
    'MAXIMUM',
    'ARG_MAX',
    'MINIMUM',
    'LESS',
    'NEG',
    'PADV2',
    'GREATER',
    'GREATER_EQUAL',
    'LESS_EQUAL',
    'SELECT',
    'SLICE',
    'SIN',
    'TRANSPOSE_CONV',
    'SPARSE_TO_DENSE',
    'TILE',
    'EXPAND_DIMS',
    'EQUAL',
    'NOT_EQUAL',
    'LOG',
    'SUM',
    'SQRT',
    'RSQRT',
    'SHAPE',
    'POW',
    'ARG_MIN',
    'FAKE_QUANT',
    'REDUCE_PROD',
    'REDUCE_MAX',
    'PACK',
    'LOGICAL_OR',
    'ONE_HOT',
    'LOGICAL_AND',
    'LOGICAL_NOT',
    'UNPACK',
    'REDUCE_MIN',
    'FLOOR_DIV',
    'REDUCE_ANY',
    'SQUARE',
    'ZEROS_LIKE',
    'FILL',
    'FLOOR_MOD',
    'RANGE',
    'RESIZE_NEAREST_NEIGHBOR',
    'LEAKY_RELU',
    'SQUARED_DIFFERENCE',
    'MIRROR_PAD',
    'ABS',
    'SPLIT_V',
    'UNIQUE',
    'CEIL',
    'REVERSE_V2',
    'ADD_N',
    'GATHER_ND',
    'COS',
    'WHERE',
    'RANK',
    'ELU',
    'REVERSE_SEQUENCE',
    'MATRIX_DIAG',
    'QUANTIZE',
    'MATRIX_SET_DIAG',
    'ROUND',
    'HARD_SWISH',
    'IF',
    'WHILE',
    'NON_MAX_SUPPRESSION_V4',
    'NON_MAX_SUPPRESSION_V5',
    'SCATTER_ND',
    'SELECT_V2',
    'DENSIFY',
    'SEGMENT_SUM',
    'BATCH_MATMUL',
]


def getSupportedOperators():
    opcs = list(OpFactory.registry.keys())
    opcs.sort()
    names = [OP_NAMES[opc] for opc in opcs]
    return names
